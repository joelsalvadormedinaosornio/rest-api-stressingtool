/*
 * KM Router
 * Allows processing of different types of transactions
 *
 * OpenAPI spec version: 2.0.0.0
 * Contact: atencionclientes@kssoluciones.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ks.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * TransactionRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-03T18:10:54.088Z")
public class TransactionRequest
{
    @SerializedName("message_type")
    private String messageType = null;

    @SerializedName("transaction_type")
    private String transactionType = null;

    @SerializedName("card_number")
    private String cardNumber = null;

    @SerializedName("cvv2")
    private String cvv2 = null;

    @SerializedName("track1")
    private String track1 = null;

    @SerializedName("track2")
    private String track2 = null;

    @SerializedName("expiration_date")
    private String expirationDate = null;

    @SerializedName("amount")
    private Double amount = null;

    @SerializedName("shop_number")
    private Integer shopNumber = null;

    @SerializedName("transaction_date")
    private String transactionDate = null;

    @SerializedName("transaction_time")
    private String transactionTime = null;

    @SerializedName("transaction_timeout")
    private String transactionTimeout = null;

    @SerializedName("transaction_id")
    private String transactionId = null;

    @SerializedName("currency_code")
    private String currencyCode = null;

    @SerializedName("merchant_type")
    private String merchantType = "";

    @SerializedName("affiliation")
    private String affiliation = null;

    @SerializedName("banamex_affiliation")
    private String banamexAffiliation = null;

    @SerializedName("deferred_payments")
    private DeferredPayments deferredPayments = null;

    @SerializedName("points")
    private Points points = null;

    @SerializedName("pinpad")
    private Pinpad pinpad = null;

    @SerializedName("emv")
    private Emv emv = null;

    @SerializedName("security_data")
    private SecurityData securityData = null;

    @SerializedName("giftcard")
    private GiftCard giftcard = null;

    @SerializedName("check")
    private Check check = null;

    @SerializedName("diestel")
    private Diestel diestel = null;

    public TransactionRequest messageType(String messageType)
    {
        this.messageType = messageType;
        return this;
    }

    /**
     * Get messageType
     *
     * @return messageType
     **/
    @ApiModelProperty(example = "01", value = "")
    public String getMessageType()
    {
        return messageType;
    }

    public void setMessageType(String messageType)
    {
        this.messageType = messageType;
    }

    public TransactionRequest transactionType(String transactionType)
    {
        this.transactionType = transactionType;
        return this;
    }

    /**
     * Get transactionType
     *
     * @return transactionType
     **/
    @ApiModelProperty(example = "100000", value = "")
    public String getTransactionType()
    {
        return transactionType;
    }

    public void setTransactionType(String transactionType)
    {
        this.transactionType = transactionType;
    }

    public TransactionRequest cardNumber(String cardNumber)
    {
        this.cardNumber = cardNumber;
        return this;
    }

    /**
     * Number card or encrypted value
     *
     * @return cardNumber
     **/
    @ApiModelProperty(example = "4444555566667777", required = true, value = "Number card or encrypted value")
    public String getCardNumber()
    {
        return cardNumber;
    }

    public void setCardNumber(String cardNumber)
    {
        this.cardNumber = cardNumber;
    }

    public TransactionRequest cvv2(String cvv2)
    {
        this.cvv2 = cvv2;
        return this;
    }

    /**
     * Verification code
     *
     * @return cvv2
     **/
    @ApiModelProperty(value = "Verification code")
    public String getCvv2()
    {
        return cvv2;
    }

    public void setCvv2(String cvv2)
    {
        this.cvv2 = cvv2;
    }

    public TransactionRequest track1(String track1)
    {
        this.track1 = track1;
        return this;
    }

    /**
     * Track 1 Data
     *
     * @return track1
     **/
    @ApiModelProperty(example = "Miguel Perez Vazquez", value = "Track 1 Data")
    public String getTrack1()
    {
        return track1;
    }

    public void setTrack1(String track1)
    {
        this.track1 = track1;
    }

    public TransactionRequest track2(String track2)
    {
        this.track2 = track2;
        return this;
    }

    /**
     * Track 2 Data
     *
     * @return track2
     **/
    @ApiModelProperty(example = "4444555566667777=46546546546", value = "Track 2 Data")


    public String getTrack2()
    {
        return track2;
    }

    public void setTrack2(String track2)
    {
        this.track2 = track2;
    }

    public TransactionRequest expirationDate(String expirationDate)
    {
        this.expirationDate = expirationDate;
        return this;
    }

    /**
     * The expiration date of number card, the format is MMYY
     *
     * @return expirationDate
     **/
    @ApiModelProperty(example = "0125", value = "The expiration date of number card, the format is MMYY")
    public String getExpirationDate()
    {
        return expirationDate;
    }

    public void setExpirationDate(String expirationDate)
    {
        this.expirationDate = expirationDate;
    }

    public TransactionRequest amount(Double amount)
    {
        this.amount = amount;
        return this;
    }

    /**
     * Amount of the operation
     *
     * @return amount
     **/
    @ApiModelProperty(example = "985.15", required = true, value = "Amount of the operation")
    public Double getAmount()
    {
        return amount;
    }

    public void setAmount(Double amount)
    {
        this.amount = amount;
    }

    public TransactionRequest shopNumber(Integer shopNumber)
    {
        this.shopNumber = shopNumber;
        return this;
    }

    /**
     * Number of the shop
     *
     * @return shopNumber
     **/
    @ApiModelProperty(example = "8810", required = true, value = "Number of the shop")
    public Integer getShopNumber()
    {
        return shopNumber;
    }

    public void setShopNumber(Integer shopNumber)
    {
        this.shopNumber = shopNumber;
    }

    public TransactionRequest transactionDate(String transactionDate)
    {
        this.transactionDate = transactionDate;
        return this;
    }

    /**
     * The local date from the shop, the format is ddMMyyyy
     *
     * @return transactionDate
     **/
    @ApiModelProperty(example = "20042017", required = true, value = "The local date from the shop, the format is ddMMyyyy")
    public String getTransactionDate()
    {
        return transactionDate;
    }

    public void setTransactionDate(String transactionDate)
    {
        this.transactionDate = transactionDate;
    }

    public TransactionRequest transactionTime(String transactionTime)
    {
        this.transactionTime = transactionTime;
        return this;
    }

    /**
     * The local time from the shop, the format is HH:mm:ss.sss
     *
     * @return transactionTime
     **/
    @ApiModelProperty(example = "15:25:55.534", required = true, value = "The local time from the shop, the format is HH:mm:ss.sss")
    public String getTransactionTime()
    {
        return transactionTime;
    }

    public void setTransactionTime(String transactionTime)
    {
        this.transactionTime = transactionTime;
    }

    public TransactionRequest transactionId(String transactionId)
    {
        this.transactionId = transactionId;
        return this;
    }

    /**
     * Get transactionId
     *
     * @return transactionId
     **/
    @ApiModelProperty(example = "623446825474", value = "")
    public String getTransactionId()
    {
        return transactionId;
    }

    public void setTransactionId(String transactionId)
    {
        this.transactionId = transactionId;
    }

    public TransactionRequest transactionTimeout(String transactionTimeout)
    {
        this.transactionTimeout = transactionTimeout;
        return this;
    }

    /**
     * Get transactionTimeout
     *
     * @return transactionTimeout
     **/
    @ApiModelProperty(example = "623446825474", value = "")
    public String getTransactionTimeout()
    {
        return transactionTimeout;
    }

    public void setTransactionTimeout(String transactionTimeout)
    {
        this.transactionTimeout = transactionTimeout;
    }

    public TransactionRequest currencyCode(String currencyCode)
    {
        this.currencyCode = currencyCode;
        return this;
    }

    /**
     * @return currencyCode
     **/
    @ApiModelProperty(example = "484", value = "")
    public String getCurrencyCode()
    {
        return currencyCode;
    }

    public void setCurrencyCode(String currencyCode)
    {
        this.currencyCode = currencyCode;
    }

    public TransactionRequest merchantType(String merchantType)
    {
        this.merchantType = merchantType;
        return this;
    }

    /**
     * Get merchantType
     *
     * @return merchantType
     **/
    @ApiModelProperty(value = "")
    public String getMerchantType()
    {
        return merchantType;
    }

    public void setMerchantType(String merchantType)
    {
        this.merchantType = merchantType;
    }

    public TransactionRequest affiliation(String affiliation)
    {
        this.affiliation = affiliation;
        return this;
    }

    /**
     * Get affiliation
     *
     * @return affiliation
     **/
    @ApiModelProperty(value = "")
    public String getAffiliation()
    {
        return affiliation;
    }

    public void setAffiliation(String affiliation)
    {
        this.affiliation = affiliation;
    }

    public TransactionRequest banamexAffiliation(String banamexAffiliation)
    {
        this.banamexAffiliation = banamexAffiliation;
        return this;
    }

    /**
     * Get banamexAffiliation
     *
     * @return banamexAffiliation
     **/
    @ApiModelProperty(value = "")
    public String getBanamexAffiliation()
    {
        return banamexAffiliation;
    }

    public void setBanamexAffiliation(String banamexAffiliation)
    {
        this.banamexAffiliation = banamexAffiliation;
    }

    public TransactionRequest deferredPayments(DeferredPayments deferredPayments)
    {
        this.deferredPayments = deferredPayments;
        return this;
    }

    /**
     * Get deferredPayments
     *
     * @return deferredPayments
     **/
    @ApiModelProperty(value = "")
    public DeferredPayments getDeferredPayments()
    {
        return deferredPayments;
    }

    public void setDeferredPayments(DeferredPayments deferredPayments)
    {
        this.deferredPayments = deferredPayments;
    }

    public TransactionRequest points(Points points)
    {
        this.points = points;
        return this;
    }

    /**
     * Get points
     *
     * @return points
     **/
    @ApiModelProperty(value = "")
    public Points getPoints()
    {
        return points;
    }

    public void setPoints(Points points)
    {
        this.points = points;
    }

    public TransactionRequest pinpad(Pinpad pinpad)
    {
        this.pinpad = pinpad;
        return this;
    }

    /**
     * Get pinpad
     *
     * @return pinpad
     **/
    @ApiModelProperty(required = true, value = "")
    public Pinpad getPinpad()
    {
        return pinpad;
    }

    public void setPinpad(Pinpad pinpad)
    {
        this.pinpad = pinpad;
    }

    public TransactionRequest emv(Emv emv)
    {
        this.emv = emv;
        return this;
    }

    /**
     * Get emv
     *
     * @return emv
     **/
    @ApiModelProperty(value = "")
    public Emv getEmv()
    {
        return emv;
    }

    public void setEmv(Emv emv)
    {
        this.emv = emv;
    }

    public TransactionRequest securityData(SecurityData securityData)
    {
        this.securityData = securityData;
        return this;
    }

    /**
     * Get securityData
     *
     * @return securityData
     **/
    @ApiModelProperty(value = "")
    public SecurityData getSecurityData()
    {
        return securityData;
    }

    public void setSecurityData(SecurityData securityData)
    {
        this.securityData = securityData;
    }

    public TransactionRequest giftcard(GiftCard giftcard)
    {
        this.giftcard = giftcard;
        return this;
    }

    /**
     * Get giftcard
     *
     * @return giftcard
     **/
    @ApiModelProperty(value = "")
    public GiftCard getGiftcard()
    {
        return giftcard;
    }

    public void setGiftcard(GiftCard giftcard)
    {
        this.giftcard = giftcard;
    }

    public TransactionRequest check(Check check)
    {
        this.check = check;
        return this;
    }

    /**
     * Get check
     *
     * @return check
     **/
    @ApiModelProperty(value = "")
    public Check getCheck()
    {
        return check;
    }

    public void setCheck(Check check)
    {
        this.check = check;
    }

    public TransactionRequest diestel(Diestel diestel)
    {
        this.diestel = diestel;
        return this;
    }

    /**
     * Get diestel
     *
     * @return diestel
     **/
    @ApiModelProperty(value = "")
    public Diestel getDiestel()
    {
        return diestel;
    }

    public void setDiestel(Diestel diestel)
    {
        this.diestel = diestel;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        TransactionRequest transactionRequest = (TransactionRequest) o;
        return Objects.equals(this.messageType, transactionRequest.messageType) &&

                Objects.equals(this.transactionType, transactionRequest.transactionType) &&

                Objects.equals(this.cardNumber, transactionRequest.cardNumber) &&

                Objects.equals(this.cvv2, transactionRequest.cvv2) &&

                Objects.equals(this.track1, transactionRequest.track1) &&

                Objects.equals(this.track2, transactionRequest.track2) &&

                Objects.equals(this.expirationDate, transactionRequest.expirationDate) &&

                Objects.equals(this.amount, transactionRequest.amount) &&

                Objects.equals(this.shopNumber, transactionRequest.shopNumber) &&

                Objects.equals(this.transactionDate, transactionRequest.transactionDate) &&

                Objects.equals(this.transactionTime, transactionRequest.transactionTime) &&

                Objects.equals(this.transactionId, transactionRequest.transactionId) &&

                Objects.equals(this.transactionTimeout, transactionRequest.transactionTimeout) &&

                Objects.equals(this.currencyCode, transactionRequest.currencyCode) &&

                Objects.equals(this.merchantType, transactionRequest.merchantType) &&

                Objects.equals(this.affiliation, transactionRequest.affiliation) &&

                Objects.equals(this.banamexAffiliation, transactionRequest.banamexAffiliation) &&

                Objects.equals(this.deferredPayments, transactionRequest.deferredPayments) &&

                Objects.equals(this.points, transactionRequest.points) &&

                Objects.equals(this.pinpad, transactionRequest.pinpad) &&

                Objects.equals(this.emv, transactionRequest.emv) &&

                Objects.equals(this.securityData, transactionRequest.securityData) &&

                Objects.equals(this.giftcard, transactionRequest.giftcard) &&

                Objects.equals(this.check, transactionRequest.check) &&

                Objects.equals(this.diestel, transactionRequest.diestel);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(messageType, transactionType, cardNumber, cvv2, track1, track2, expirationDate, amount,

                shopNumber, transactionDate, transactionTime, transactionId, transactionTimeout, currencyCode,

                merchantType, affiliation, banamexAffiliation, deferredPayments, points, pinpad, emv, securityData,

                giftcard, diestel);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TransactionRequest {\n");

        sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
        sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
        sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
        sb.append("    cvv2: ").append(toIndentedString(cvv2)).append("\n");
        sb.append("    track1: ").append(toIndentedString(track1)).append("\n");
        sb.append("    track2: ").append(toIndentedString(track2)).append("\n");
        sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    shopNumber: ").append(toIndentedString(shopNumber)).append("\n");
        sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
        sb.append("    transactionTime: ").append(toIndentedString(transactionTime)).append("\n");
        sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
        sb.append("    transactionTimeout: ").append(toIndentedString(transactionTimeout)).append("\n");
        sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
        sb.append("    merchantType: ").append(toIndentedString(merchantType)).append("\n");
        sb.append("    affiliation: ").append(toIndentedString(affiliation)).append("\n");
        sb.append("    banamexAffiliation: ").append(toIndentedString(banamexAffiliation)).append("\n");
        sb.append("    deferredPayments: ").append(toIndentedString(deferredPayments)).append("\n");
        sb.append("    points: ").append(toIndentedString(points)).append("\n");
        sb.append("    pinpad: ").append(toIndentedString(pinpad)).append("\n");
        sb.append("    emv: ").append(toIndentedString(emv)).append("\n");
        sb.append("    securityData: ").append(toIndentedString(securityData)).append("\n");
        sb.append("    giftcard: ").append(toIndentedString(giftcard)).append("\n");
        sb.append("    check: ").append(toIndentedString(check)).append("\n");
        sb.append("    diestel: ").append(toIndentedString(diestel)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public String toSingleLineString()
    {
        return this.toString().replace("\n", "  ");
    }

    public static String refill(String character, int length)
    {
        final StringBuilder refill = new StringBuilder();

        for (int i = 0; i < length; i++)
        {
            refill.append(character);
        }
        return refill.toString();
    }


}

